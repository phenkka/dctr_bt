import asyncio
import logging
import os
from aiogram import Bot, Dispatcher
from logs.logging_config import logger
from dotenv import load_dotenv
from bot.handlers import router
from bot.database import Database  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å Database
from bot.middleware import DatabaseMiddleware

load_dotenv()

bot = Bot(token=os.getenv('BOT_API'))
dp = Dispatcher()

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ Database
db = Database()

async def main():
    logger.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—É–ª –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∫ –ë–î
    await db.init_pool()
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º Middleware –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –ø—É–ª–∞ –ë–î –≤ —Ö–µ–Ω–¥–ª–µ—Ä—ã
    dp.update.middleware(DatabaseMiddleware(db.pool))
    
    dp.include_router(router)
    
    try:
        await dp.start_polling(bot)
    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø—É–ª –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∫ –ë–î –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ
        await db.close_pool()
        logger.info("‚ùå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î –∑–∞–∫—Ä—ã—Ç–æ.")

if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO)
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.warning("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é.")
        print("–í—ã—Ö–æ–¥")
